@using System.Security.Claims;
@using System.Linq;
@{
    ViewBag.Title = "Manage";

    string email = "", name = "";

    if (User.Identity.IsAuthenticated)
    {
        var user = User as ClaimsPrincipal;
        var claims = user.Claims.ToList();
        email = User.Identity.Name;
        name = claims.Where(x => x.Type.Equals("Name")).FirstOrDefault().Value;
    }
}

<h2>Manage</h2>

<div ng-controller="SuperAdminController">
    <h1>{{Name}}</h1>
</div>



@section scripts {
    <script src="~/signalr/hubs"></script>
    <script src="~/core/signalR/hubProvider.js"></script>    
    @*<script>

        function onConnected(model) {
            return Object.keys(model).map((i) => i + '=' + model[i]).join('&');
        }

        $(function () {
            var chat = $.connection.chatHub;
            chat.connection.qs = onConnected({ Name: '@name', Email: '@email', Status: 'OnLogin' })

            $.connection.hub.start().done(function () {

            });
        });
    </script>*@

<script>

        function onConnected(model) {

            return Object.keys(model).map((i) => i + '=' + model[i]).join('&');
        }

        $(function () {
            // Reference the auto-generated proxy for the hub.
            debugger;
            var chat = $.connection.chatHub;
            chat.connection.qs = onConnected({ Name: '@name', Email: '@email', Status: 'OnLogin' })

            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            // Get the user name and store it to prepend to messages.
            //$('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.
            //$('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
</script>
}